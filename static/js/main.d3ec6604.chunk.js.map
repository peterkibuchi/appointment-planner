{"version":3,"sources":["components/contactPicker/ContactPicker.js","components/appointmentForm/AppointmentForm.js","components/table/TableHeader.js","components/table/TableBody.js","components/table/Table.js","containers/appointmentsPage/AppointmentsPage.js","components/contactForm/ContactForm.js","containers/contactsPage/ContactsPage.js","App.js","index.js"],"names":["ContactPicker","contact","contacts","handleContactChange","name","value","onChange","required","map","index","AppointmentForm","title","setTitle","setContact","date","setDate","time","setTime","handleSubmit","onSubmit","htmlFor","type","id","minLength","maxLength","placeholder","e","target","min","Date","toLocaleDateString","split","month","day","year","padStart","getTodayString","TableHeader","row","page","TableBody","items","removeItem","rows","item","properties","Object","values","property","onClick","Table","AppointmentsPage","appointments","addAppointment","removeAppointment","useState","preventDefault","ContactForm","setName","occupation","setOccupation","phoneNumber","setPhoneNumber","email","setEmail","pattern","ContactsPage","addContact","removeContact","duplicate","setDuplicate","useEffect","forEach","console","log","App","setContacts","setAppointments","getLocalContacts","getLocalAppointments","saveLocalContacts","saveLocalAppointments","localStorage","getItem","setItem","JSON","stringify","storedContacts","parse","storedAppointments","ROUTES","to","activeClassName","exact","path","filter","i","appointment","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d3ec6604.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport const ContactPicker = ({ contact, contacts, handleContactChange }) => {\r\n  return (\r\n    <select name=\"contact\" value={contact} onChange={handleContactChange} required>\r\n      <option key=\"none\" value=\"Not Specified\"></option>\r\n      {contacts.map((contact, index) => {\r\n        return <option key={index} value={contact.name}>{contact.name}</option>;\r\n      })}\r\n    </select>\r\n  );\r\n};","import React from \"react\";\r\nimport { ContactPicker } from \"../../components/contactPicker/ContactPicker\";\r\n\r\nexport const AppointmentForm = ({\r\n  title, setTitle,\r\n  contact, setContact,\r\n  date, setDate,\r\n  time, setTime,\r\n  contacts, handleSubmit\r\n}) => {\r\n  const handleTitleChange = (e) => {\r\n    setTitle(e.target.value);\r\n  }\r\n\r\n  const handleContactChange = (e) => {\r\n    setContact(e.target.value);\r\n  }\r\n\r\n  const handleDateChange = (e) => {\r\n    setDate(e.target.value);\r\n  }\r\n\r\n  const handleTimeChange = (e) => {\r\n    setTime(e.target.value);\r\n  }\r\n\r\n  const getTodayString = () => {\r\n    const [month, day, year] = new Date()\r\n      .toLocaleDateString(\"en-US\")\r\n      .split(\"/\");\r\n    return `${year}-${month.padStart(2, \"0\")}-${day.padStart(2, \"0\")}`;\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <label htmlFor=\"title\">Title:</label>\r\n      <input\r\n        type=\"text\" name=\"title\" id=\"title\"\r\n        minLength=\"4\" maxLength=\"64\"\r\n        placeholder=\"e.g Desert Tour\"\r\n        value={title} onChange={handleTitleChange}\r\n        required\r\n      />\r\n\r\n      <label htmlFor=\"contact\">Contact:</label>\r\n      <ContactPicker id=\"contact\" contact={contact} contacts={contacts} handleContactChange={handleContactChange} />\r\n\r\n      <label htmlFor=\"date\">Date:</label>\r\n      <input\r\n        type=\"date\" name=\"date\" id=\"date\"\r\n        min={getTodayString()}\r\n        value={date} onChange={handleDateChange}\r\n        required\r\n      />\r\n\r\n      <label htmlFor=\"time\">Time:</label>\r\n      <input\r\n        type=\"time\" name=\"time\" id=\"time\"\r\n        value={time} onChange={handleTimeChange}\r\n        required\r\n      />\r\n\r\n      <input type=\"submit\" />\r\n    </form>\r\n  );\r\n};\r\n","import React from \"react\";\n\nexport const TableHeader = ({ page }) => {\n  let row;\n  if (page === \"contacts\") {\n    row = (\n      <tr>\n        <th>Name</th>\n        <th>Occupation</th>\n        <th>Phone Number</th>\n        <th>Email</th>\n        <th>Remove</th>\n      </tr>\n    );\n  } else if (page === \"appointments\") {\n    row = (\n      <tr>\n        <th>Title</th>\n        <th>Contact</th>\n        <th>Date</th>\n        <th>Time</th>\n        <th>Remove</th>\n      </tr>\n    );\n  }\n\n  return (\n    <thead>{row}</thead>\n  );\n}","import React from \"react\";\n\nexport const TableBody = ({ items, removeItem }) => {\n  const rows = items.map((item, index) => {\n    const properties = Object.values(item);\n\n    return (\n      <tr key={index}>\n        {properties.map((property, index) => <td key={index}>{property}</td>)}\n        <td key=\"remove\">\n          <button onClick={() => removeItem(index)}>Delete</button>\n        </td>\n      </tr>\n    );\n  });\n\n  return <tbody>{rows}</tbody>;\n}","import React from \"react\";\nimport { TableHeader } from \"../table/TableHeader\";\nimport { TableBody } from \"../table/TableBody\";\n\nexport const Table = ({ page, items, removeItem }) => {\n  return (\n    <table>\n      <TableHeader page={page} />\n      <TableBody items={items} removeItem={removeItem} />\n    </table>\n  );\n}","import React, { useState } from \"react\";\r\n\r\nimport { AppointmentForm } from \"../../components/appointmentForm/AppointmentForm\";\r\nimport { Table } from \"../../components/table/Table\";\r\n\r\nexport const AppointmentsPage = ({ contacts, appointments, addAppointment, removeAppointment }) => {\r\n  /* Define state variables for appointment info */\r\n  const [title, setTitle] = useState(\"\");\r\n  const [contact, setContact] = useState(\"\");\r\n  const [date, setDate] = useState(\"\");\r\n  const [time, setTime] = useState(\"\");\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    /* Add contact info and clear data */\r\n    addAppointment(title, contact, date, time);\r\n    setTitle(\"\");\r\n    setContact(\"\");\r\n    setDate(\"\");\r\n    setTime(\"\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <section>\r\n        <h2>Add Appointment</h2>\r\n        <AppointmentForm\r\n          title={title} setTitle={setTitle}\r\n          contact={contact} setContact={setContact}\r\n          date={date} setDate={setDate}\r\n          time={time} setTime={setTime}\r\n          contacts={contacts} handleSubmit={handleSubmit}\r\n        />\r\n      </section>\r\n      <hr />\r\n      <section>\r\n        <h2>Appointments</h2>\r\n        <Table page=\"appointments\" items={appointments} removeItem={removeAppointment} />\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const ContactForm = ({\r\n  name, setName,\r\n  occupation, setOccupation,\r\n  phoneNumber, setPhoneNumber,\r\n  email, setEmail,\r\n  handleSubmit\r\n}) => {\r\n  const handleNameChange = (e) => {\r\n    setName(e.target.value);\r\n  }\r\n\r\n  const handleOccupationChange = (e) => {\r\n    setOccupation(e.target.value);\r\n  }\r\n\r\n  const handlePhoneNumberChange = (e) => {\r\n    setPhoneNumber(e.target.value);\r\n  }\r\n\r\n  const handleEmailChange = (e) => {\r\n    setEmail(e.target.value);\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <label htmlFor=\"name\">Name:</label>\r\n      <input\r\n        type=\"text\" name=\"name\" id=\"name\"\r\n        minLength=\"4\" maxLength=\"32\"\r\n        placeholder=\"e.g. Liet Kynes\"\r\n        value={name} onChange={handleNameChange}\r\n        required\r\n      />\r\n\r\n      <label htmlFor=\"occupation\">Occupation:</label>\r\n      <input\r\n        type=\"text\" name=\"occupation\" id=\"occupation\"\r\n        minLength=\"4\" maxLength=\"32\"\r\n        placeholder=\"e.g Imperial Ecologist\"\r\n        value={occupation} onChange={handleOccupationChange}\r\n        required\r\n      />\r\n\r\n      <label htmlFor=\"phoneNumber\">Phone Number:</label>\r\n      <input\r\n        type=\"tel\" name=\"phoneNumber\" id=\"phoneNumber\"\r\n        pattern=\"^(\\(?\\+?[0-9]*\\)?)?[0-9_\\- \\(\\)]*$\"\r\n        placeholder=\"e.g +254-712-345678\"\r\n        value={phoneNumber} onChange={handlePhoneNumberChange}\r\n        required\r\n      />\r\n\r\n      <label htmlFor=\"email\">Email:</label>\r\n      <input\r\n        type=\"email\" name=\"email\" id=\"email\"\r\n        minLength=\"8\" maxLength=\"32\"\r\n        placeholder=\"e.g. lietkynes@arrakis.com\"\r\n        value={email} onChange={handleEmailChange}\r\n        required\r\n      />\r\n\r\n      <input type=\"submit\" />\r\n    </form>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport { ContactForm } from \"../../components/contactForm/ContactForm\";\r\nimport { Table } from \"../../components/table/Table\";\r\n\r\nexport const ContactsPage = ({ contacts, addContact, removeContact }) => {\r\n  /* Define state variables for contact info and duplicate check */\r\n  let [name, setName] = useState(\"\");\r\n  let [occupation, setOccupation] = useState(\"\");\r\n  let [phoneNumber, setPhoneNumber] = useState(\"\");\r\n  let [email, setEmail] = useState(\"\");\r\n  let [duplicate, setDuplicate] = useState(false);\r\n\r\n  /* Using hooks, check for contact name in the contacts array variable in props */\r\n  useEffect(() => {\r\n    setDuplicate(false); // Resets duplicate state to allow one to submit once changes are made\r\n\r\n    contacts.forEach(contact => {\r\n      if (name === contact.name && occupation === contact.occupation) {\r\n        setDuplicate(true);\r\n      }\r\n    });\r\n  }, [name, occupation]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    /* Add contact info and clear data if the contact name is not a duplicate */\r\n    if (!duplicate) {\r\n      addContact(name, occupation, phoneNumber, email);\r\n      setName(\"\");\r\n      setOccupation(\"\");\r\n      setPhoneNumber(\"\");\r\n      setEmail(\"\");\r\n    } else {\r\n      console.log(\"Couldn't create new contact. Check if contact already exists and whether form inputs have been entered correctly.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <section>\r\n        <h2>Add Contact</h2> \r\n        <ContactForm\r\n          name={name} setName={setName}\r\n          occupation={occupation} setOccupation={setOccupation}\r\n          phoneNumber={phoneNumber} setPhoneNumber={setPhoneNumber}\r\n          email={email} setEmail={setEmail}\r\n          handleSubmit={handleSubmit}\r\n        />\r\n      </section>\r\n      <hr />\r\n      <section>\r\n        <h2>Contacts</h2>\r\n        <Table page=\"contacts\" items={contacts} removeItem={removeContact} />\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Switch, Route, Redirect, NavLink } from \"react-router-dom\";\r\n\r\nimport { AppointmentsPage } from \"./containers/appointmentsPage/AppointmentsPage\";\r\nimport { ContactsPage } from \"./containers/contactsPage/ContactsPage\";\r\n\r\nfunction App() {\r\n  /* Define state variables for contacts and appointments */\r\n  const [contacts, setContacts] = useState([]);\r\n  const [appointments, setAppointments] = useState([]);\r\n\r\n  // Runs ONCE when the app first renders\r\n  useEffect(() => {\r\n    getLocalContacts();\r\n    getLocalAppointments();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    saveLocalContacts();\r\n  }, [contacts]);\r\n\r\n  useEffect(() => {\r\n    saveLocalAppointments();\r\n  }, [appointments]);\r\n\r\n  // Retrieving Data from Local Storage\r\n  const getLocalContacts = () => {\r\n    if (localStorage.getItem(\"contacts\") === null) {\r\n      localStorage.setItem(\"contacts\", JSON.stringify([]));\r\n    } else {\r\n      const storedContacts = JSON.parse(localStorage.getItem(\"contacts\"));\r\n      setContacts(storedContacts);\r\n    }\r\n  }\r\n\r\n  const getLocalAppointments = () => {\r\n    if (localStorage.getItem(\"appointments\") === null) {\r\n      localStorage.setItem(\"appointments\", JSON.stringify([]));\r\n    } else {\r\n      const storedAppointments = JSON.parse(localStorage.getItem(\"appointments\"));\r\n      setAppointments(storedAppointments);\r\n    }\r\n  }\r\n\r\n  // Saving Data to Local Storage\r\n  const saveLocalContacts = () => {\r\n    localStorage.setItem(\"contacts\", JSON.stringify(contacts));\r\n  }\r\n\r\n  const saveLocalAppointments = () => {\r\n    localStorage.setItem(\"appointments\", JSON.stringify(appointments));\r\n  }\r\n\r\n  /* Implement functions to add and remove contacts and appointments */\r\n  const addContact = (name, occupation, phoneNumber, email) => {\r\n    let contact = {\r\n      name: name,\r\n      occupation: occupation,\r\n      phoneNumber: phoneNumber,\r\n      email: email\r\n    };\r\n    setContacts([...contacts, contact]);\r\n  }\r\n\r\n  const removeContact = (index) => {\r\n    setContacts(contacts.filter((contact, i) => i !== index));\r\n  }\r\n\r\n  const addAppointment = (title, contact, date, time) => {\r\n    let appointment = {\r\n      title: title,\r\n      contact: contact,\r\n      date: date,\r\n      time: time\r\n    };\r\n    setAppointments([...appointments, appointment]);\r\n  }\r\n\r\n  const removeAppointment = (index) => {\r\n    setAppointments(appointments.filter((appointments, i) => i !== index));\r\n  }\r\n\r\n  const ROUTES = {\r\n    CONTACTS: \"/contacts\",\r\n    APPOINTMENTS: \"/appointments\",\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <nav>\r\n        <NavLink to={ROUTES.CONTACTS} activeClassName=\"active\">\r\n          Contacts\r\n        </NavLink>\r\n        <NavLink to={ROUTES.APPOINTMENTS} activeClassName=\"active\">\r\n          Appointments\r\n        </NavLink>\r\n      </nav>\r\n\r\n      <main>\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Redirect to={ROUTES.CONTACTS} />\r\n          </Route>\r\n          <Route path={ROUTES.CONTACTS}>\r\n             {/* Add props to ContactsPage */}\r\n            <ContactsPage contacts={contacts} addContact={addContact} removeContact={removeContact} />\r\n          </Route>\r\n          <Route path={ROUTES.APPOINTMENTS}>\r\n            {/* Add props to AppointmentsPage */}\r\n            <AppointmentsPage contacts={contacts} appointments={appointments} addAppointment={addAppointment} removeAppointment={removeAppointment} />\r\n          </Route>\r\n        </Switch>\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport App from \"./App\";\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(\r\n  <Router>\r\n    <App />\r\n  </Router>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}